/*
 * SPDX-FileCopyrightText: 2021 Eric Neidhardt
 * SPDX-License-Identifier: MIT
 */
def groupId = 'com.github.ericneid'
def libraryName = 'ktx-address-services'
def libraryVersion = '0.1.1'

ext {
	PUBLISH_GROUP_ID = groupId
	PUBLISH_VERSION = libraryVersion
	PUBLISH_ARTIFACT_ID = libraryName
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.jaredsburrows.license'
apply from: "${rootProject.projectDir}/scripts/publish-mavencentral.gradle"

android {
	compileSdkVersion rootProject.compileSdkVersion
	buildToolsVersion rootProject.buildToolsVersion

	defaultConfig {
		minSdkVersion project.minSdkVersion
		targetSdkVersion project.targetSdkVersion
		testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
	}
	buildTypes {
		release {
			minifyEnabled false
		}
	}
	sourceSets {
		main.java.srcDirs += 'src/main/kotlin'
		test.java.srcDirs += 'src/test/kotlin'
		debug.java.srcDirs += 'src/debug/kotlin'
		release.java.srcDirs += 'src/release/kotlin'
	}
	kotlinOptions {
		jvmTarget = JavaVersion.VERSION_1_8.toString()
		freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
	}
	compileOptions {
		sourceCompatibility = '1.8'
		targetCompatibility = '1.8'
	}
	testOptions {
		unitTests.returnDefaultValues = true
	}
}

group = groupId
version = libraryVersion
archivesBaseName = libraryName

repositories {
	google()
	mavenCentral()
}

def androidxTestVersion = '1.4.0'
def retrofitVersion = '2.9.0'
def coroutineVersion = "1.6.3"

dependencies {
	// kotlin
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
	implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion")
	implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion")

	// retrofit for http - make sure that all libraries are referenced with the same version
	implementation("com.squareup.retrofit2:retrofit:$retrofitVersion")
	implementation("com.squareup.retrofit2:converter-gson:$retrofitVersion")
	implementation("com.squareup.okhttp3:okhttp:4.10.0")

	// json parser
	implementation("com.google.code.gson:gson:2.8.9")

	// testing
	testImplementation("junit:junit:4.13.2")
	testImplementation("android.arch.core:core-testing:1.1.1")
	testImplementation("com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0")
	testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineVersion")

	androidTestImplementation("androidx.test:runner:$androidxTestVersion")
	androidTestImplementation("androidx.test:rules:$androidxTestVersion")
	androidTestImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineVersion")
}
